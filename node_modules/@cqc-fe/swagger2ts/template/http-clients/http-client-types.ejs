import { AxiosRequestConfig, ResponseType } from "axios";

// get请求参数类型
export type QueryParamsType = Record<string | number, any>;

export interface FullRequestParams extends Omit<AxiosRequestConfig, "data" | "params" | "url" | "responseType"> {
  /** set parameter to `true` for call `securityWorker` for this request */
  secure?: boolean;
  /** request path */
  path: string;
  /** content type of request body */
  type?: ContentType;
  /** query params */
  query?: QueryParamsType;
  /** format of response (i.e. response.json() -> format: "json") */
  format?: ResponseType;
  /** request body */
  body?: unknown;
}

export type RequestParams = Omit<FullRequestParams, "body" | "method" | "query" | "path">;

export interface ApiConfig<SecurityDataType = unknown> extends Omit<AxiosRequestConfig, "data" | "cancelToken"> {
  securityWorker?: (securityData: SecurityDataType | null) => Promise<AxiosRequestConfig | void> | AxiosRequestConfig | void;
  secure?: boolean;
  format?: ResponseType;
}

export enum ContentType {
  Json = "application/json",
  FormData = "multipart/form-data",
  UrlEncoded = "application/x-www-form-urlencoded",
  Text = "text/plain",
}

export enum BusinessCode {
  SUCCESS = 200,
  NO_DATA = 201,
  DATA_ALREDAY_EXIST = 202,
  PARAMETER_IS_ERROR = 301,
  INTERNAL_ERROR = 302,
  FILE_TYPE_ERROR = 303,
  CAN_NOT_DELETE = 400,
  UNAUTHORIZED = 401,
  JOB_POST_FAILURE = 3001,
  JOB_RESP_FAILURE = 3002,
  NAME_ALREDAY_EXIST = 4000,
  WRONG_OBJECT_MODEL_TYPE = 4001,
  TEMPLATE_ID_ALREDAY_EXIST = 4002,
  OBJECT_TYPE_ID_ALREDAY_EXIST = 4003,
  OBJECT_MODEL_ID_ALREDAY_EXIST = 4004,
  TOKEN_INVALID = 401,
}

export enum BusinessErrMsg {
  SUCCESS = "成功",
  NO_DATA = "无数据",
  DATA_ALREDAY_EXIST = "数据已存在",
  PARAMETER_IS_ERROR = "参数错误",
  INTERNAL_ERROR = "服务器异常",
  UNAUTHORIZED = "无权限",
  JOB_POST_FAILURE = "请求异常",
}

export const codeMessage: { [key: string]: string } = {
  200: "服务器成功返回请求的数据。",
  201: "无数据",
  202: "一个请求已经进入后台排队（异步任务）。",
  204: "删除数据成功。",
  400: "发出的请求有错误，服务器没有进行新建或修改数据的操作。",
  401: "用户没有权限（令牌、用户名、密码错误）。",
  403: "用户没有访问权限",
  404: "发出的请求针对的是不存在的记录，服务器没有进行操作。",
  405: "方法不被允许",
  406: "请求的格式不可得。",
  410: "请求的资源被永久删除，且不会再得到的。",
  422: "当创建一个对象时，发生一个验证错误。",
  500: "服务器发生错误，请检查服务器。",
  502: "网关错误。",
  503: "服务不可用，服务器暂时过载或维护。",
  504: "网关超时。",
};
